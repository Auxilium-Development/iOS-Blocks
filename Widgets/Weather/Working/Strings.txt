com.apple.springboard
SBWallpaperController
orientation
duration
WBOrientationChanged
WeatherWallpaper
isDay
condition
type
clearLayers
hiddenLayers
isOverlay
locationID
woeid
WBIntervalChanged
updateInterval
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T^@,V_delegate
animating
Tc,N,V_animating
variant
Ti,N,V_variant
view
T@"WADynamicWeatherBackground",&,N,V_view
updateTimer
T@"NSTimer",&,N,V_updateTimer
city
T@"City",&,N,V_city
image
T^{CGImage=},N,V_image
v4@?0
%.2d
_day
_night
%@%@
.caml
/System/Library/PrivateFrameworks/Weather.framework
@%dx-%d%@
SELF contains[c] %@
00_day
OverlayRules
.plist
green
blue
Gradients
keys
gradients
topColor
middleColor
bottomColor
location
.png
.cpbitmap
resourceCache
T@"NSCache",&,N,V_resourceCache
assetExtension
T@"NSString",C,N,V_assetExtension
weatherFrameworkBundle
T@"NSBundle",&,N,V_weatherFrameworkBundle
SBWallpaperImage
SBFStaticWallpaperView
v8@?0c4
Tc,N,V_isOverlay
conditionLayer
T@"CALayer",&,N,V_conditionLayer
gradientLayer
T@"CAGradientLayer",&,N,V_gradientLayer
wallpaperView
T@"SBFStaticWallpaperView",&,N,V_wallpaperView
rootView
T@"UIView",&,N,V_rootView
Ti,N,V_condition
Tc,N,V_isDay
/User/Library/Preferences/com.theronen.WeatherBoard.plist
CPDistributedMessagingCenter
com.theronen.WeatherBoard
com.theronen.WeatherBoard.setUpdateInterval
setWallpaper
wallpaperSettings
loaded
Tc,N,V_loaded
Tf,N
preferences
T@"NSMutableDictionary",&,N,V_preferences
alloc
init
mainBundle
bundleIdentifier
isEqualToString:
drain
variantsShareWallpaper
sharedInstance
variantsShareWallpaper:
willAnimateRotationToInterfaceOrientation:duration:
numberWithInt:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
_updateWallpaperForLocations:withCompletion:
loaded
clearLockScreenWallpaper
clearHomeScreenWallpaper
clearSharedWallpaper
setLoaded:
_newWallpaperViewForProcedural:orImage:
wallpaperSettingsForVariant:
wallpaperWithSettings:variant:
_newWallpaperViewForProcedural:orImage:forVariant:
_isWallpaperView:displayingWallpaper:forVariant:
setHidden:
view
resume
pause
initWithSettings:variant:
autorelease
mainScreen
bounds
initWithFrame:
setVariant:
valueForKey:
boolValue
intValue
backgroundWithCondition:isDay:clearLayers:hiddenLayers:variant:
setView:
backgroundWithCondition:isDay:
setIsOverlay:
floatValue
setCity:
city
setDelegate:
setLocation:
respondsToSelector:
initWithLatitude:longitude:
setLocationID:
setWoeid:
scheduleUpdateTimer
updateInterval
scheduleUpdateTimerWithInterval:
intervalChanged:
addObserver:selector:name:object:
userInfo
update
updateTimer
invalidate
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setUpdateTimer:
conditionCode
isDay
setCondition:isDay:
variant
updateCondition:isDay:forVariant:
setLastUpdateStatus:
setUpdateTime:
removeObserver:
release
dealloc
identifier
colorChangesSignificantly
setAnimating:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
retainCount
zone
hash
superclass
description
debugDescription
cityDidStartWeatherUpdate:
cityDidFinishWeatherUpdate:
delegate
animating
_animating
_delegate
_variant
_view
_updateTimer
_city
initWithCGImage:
setImage:
wrapperWithCGImage:
image
_image
stringWithFormat:
nameForCondition:
nameForCondition:isDay:
assetExtension
weatherFrameworkBundle
URLForResource:withExtension:
bundleWithPath:
setWeatherFrameworkBundle:
setResourceCache:
resourceCache
setCountLimit:
scale
predicateWithFormat:
pathsForResourcesOfType:inDirectory:
filteredArrayUsingPredicate:
lastObject
lastPathComponent
stringByDeletingPathExtension
substringFromIndex:
setAssetExtension:
dictionaryWithContentsOfURL:
rootLayerForCondition:isDay:clearLayers:hiddenLayers:
rootLayerForCondition:isDay:
prepareLayer:clearLayers:hiddenLayers:
filenameForCondition:isDay:
rootLayerForFile:
parser
begin
parseContentsOfURL:
commit
result
name
containsObject:
clearColor
CGColor
setBackgroundColor:
sublayers
countByEnumeratingWithState:objects:count:
colorWithRed:green:blue:alpha:
arrayWithObjects:count:
colorWithDictionary:
getColors:locations:condition:isDay:
layer
setShouldRasterize:
setLocations:
setColors:
setObject:forKey:
objectForKey:
path
hasSuffix:
stringByReplacingOccurrencesOfString:withString:
pathForResource:ofType:
imageWithContentsOfCPBitmapFile:flags:
CGImage
sharedAssetLoader
rootLayerForOverlayCondition:isDay:
gradientLayerForCondition:isDay:
CAMLParser:didLoadResource:fromURL:
CAMLParser:resourceForURL:
_resourceCache
_assetExtension
_weatherFrameworkBundle
initWithCondition:isDay:
initWithCondition:isDay:clearLayers:hiddenLayers:variant:
setCondition:
setIsDay:
initializeRootViewWithBounds:
updateGradientWithCondition:isDay:
setConditionLayer:
conditionLayer
layoutConditionLayer:
addSublayer:
wallpaperViewWithBounds:variant:
setWallpaperView:
rootView
wallpaperView
insertSubview:atIndex:
doubleValue
beginAnimations:context:
setAnimationDuration:
setPosition:
setTransform:
commitAnimations
initWithVariant:
initWithFrame:wallpaperImage:
initWithFrame:wallpaperImage:variant:
gradientLayer
setGradientLayer:
setFrame:
willAnimateRotationToInterfaceOrientation:
setRootView:
setAnchorPoint:
setGeometryFlipped:
setMasksToBounds:
addSubview:
isOverlay
removeFromSuperlayer
frame
removeFromSuperview
condition
setAlpha:
animateWithDuration:animations:completion:
superlayer
hasSublayer:
timeOffset
setSpeed:
setTimeOffset:
setBeginTime:
convertTime:fromLayer:
_isOverlay
_isDay
_conditionLayer
_gradientLayer
_wallpaperView
_rootView
_condition
preferences
isEqualToDictionary:
numberWithFloat:
setValue:forKey:
centerNamed:
runServerOnCurrentThread
setWallpaper:withUserInfo:
registerForMessageName:target:selector:
preferencesPath
defaultManager
fileExistsAtPath:
dictionaryWithContentsOfFile:
dictionary
setPreferences:
updateSettingsForCondition:isDay:forVariant:
writePreferencesToFile:
mutableCopy
numberWithBool:
_updateSharedWallpaper
_updateSeparateWallpaper
removeObjectForKey:
setUpdateInterval:
_loaded
_preferences
WBWallpaper
SBFProceduralWallpaper
NSObject
CityUpdaterDelegate
WAImageWrapper
WAAsynchronousAssetLoader
WADynamicWeatherBackground
LKState
LKStateSetValue
LKStateTransition
LKStateTransitionElement
LKStateRemoveElement
LKStateRemoveAnimation
LKStateAddElement
LKStateAddAnimation
LKStateElement
WBWallpaperController
@8@0:4
c8@0:4
@16@0:4@8i12
@"UIView"8@0:4
v12@0:4c8
@"NSString"8@0:4
c12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
c12@0:4#8
c12@0:4@"Protocol"8
c12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
v12@0:4@8
v12@0:4@"City"8
v8@0:4
v12@0:4f8
^@8@0:4
v12@0:4^@8
i8@0:4
v12@0:4i8
@"WADynamicWeatherBackground"
@"NSTimer"
@"City"
@12@0:4^{CGImage=}8
^{CGImage=}8@0:4
v12@0:4^{CGImage=}8
^{CGImage=}
@12@0:4i8
@16@0:4i8c12
@24@0:4i8c12@16@20
@12@0:4@8
v20@0:4@8@12@16
^{CGColor=}12@0:4@8
v24@0:4^@8^@12i16i20
v20@0:4@8^{CGImage=}12@16
^{CGImage=}16@0:4@8@12
@"NSCache"
@"NSString"
@"NSBundle"
@28@0:4i8c12@16@20i24
@28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24
v16@0:4i8c12
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@"CALayer"
@"CAGradientLayer"
@"SBFStaticWallpaperView"
@"UIView"
c12@0:4c8
f8@0:4
v20@0:4i8c12i16
v16@0:4@8@12
@"NSMutableDictionary"
com.apple.springboard
SBWallpaperController
orientation
duration
WBOrientationChanged
WeatherWallpaper
isDay
condition
type
clearLayers
hiddenLayers
isOverlay
locationID
woeid
WBIntervalChanged
updateInterval
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T^@,V_delegate
animating
Tc,N,V_animating
variant
Ti,N,V_variant
view
T@"WADynamicWeatherBackground",&,N,V_view
updateTimer
T@"NSTimer",&,N,V_updateTimer
city
T@"City",&,N,V_city
image
T^{CGImage=},N,V_image
v4@?0
%.2d
_day
_night
%@%@
.caml
/System/Library/PrivateFrameworks/Weather.framework
@%dx-%d%@
SELF contains[c] %@
00_day
OverlayRules
.plist
green
blue
Gradients
keys
gradients
topColor
middleColor
bottomColor
location
.png
.cpbitmap
resourceCache
T@"NSCache",&,N,V_resourceCache
assetExtension
T@"NSString",C,N,V_assetExtension
weatherFrameworkBundle
T@"NSBundle",&,N,V_weatherFrameworkBundle
SBWallpaperImage
SBFStaticWallpaperView
v8@?0c4
Tc,N,V_isOverlay
conditionLayer
T@"CALayer",&,N,V_conditionLayer
gradientLayer
T@"CAGradientLayer",&,N,V_gradientLayer
wallpaperView
T@"SBFStaticWallpaperView",&,N,V_wallpaperView
rootView
T@"UIView",&,N,V_rootView
Ti,N,V_condition
Tc,N,V_isDay
/User/Library/Preferences/com.theronen.WeatherBoard.plist
CPDistributedMessagingCenter
com.theronen.WeatherBoard
com.theronen.WeatherBoard.setUpdateInterval
setWallpaper
wallpaperSettings
loaded
Tc,N,V_loaded
Tf,N
preferences
T@"NSMutableDictionary",&,N,V_preferences
alloc
init
mainBundle
bundleIdentifier
isEqualToString:
drain
variantsShareWallpaper
sharedInstance
variantsShareWallpaper:
willAnimateRotationToInterfaceOrientation:duration:
numberWithInt:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
_updateWallpaperForLocations:withCompletion:
loaded
clearLockScreenWallpaper
clearHomeScreenWallpaper
clearSharedWallpaper
setLoaded:
_newWallpaperViewForProcedural:orImage:
wallpaperSettingsForVariant:
wallpaperWithSettings:variant:
_newWallpaperViewForProcedural:orImage:forVariant:
_isWallpaperView:displayingWallpaper:forVariant:
setHidden:
view
resume
pause
initWithSettings:variant:
autorelease
mainScreen
bounds
initWithFrame:
setVariant:
valueForKey:
boolValue
intValue
backgroundWithCondition:isDay:clearLayers:hiddenLayers:variant:
setView:
backgroundWithCondition:isDay:
setIsOverlay:
floatValue
setCity:
city
setDelegate:
setLocation:
respondsToSelector:
initWithLatitude:longitude:
setLocationID:
setWoeid:
scheduleUpdateTimer
updateInterval
scheduleUpdateTimerWithInterval:
intervalChanged:
addObserver:selector:name:object:
userInfo
update
updateTimer
invalidate
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setUpdateTimer:
conditionCode
isDay
setCondition:isDay:
variant
updateCondition:isDay:forVariant:
setLastUpdateStatus:
setUpdateTime:
removeObserver:
release
dealloc
identifier
colorChangesSignificantly
setAnimating:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
retainCount
zone
hash
superclass
description
debugDescription
cityDidStartWeatherUpdate:
cityDidFinishWeatherUpdate:
delegate
animating
_animating
_delegate
_variant
_view
_updateTimer
_city
initWithCGImage:
setImage:
wrapperWithCGImage:
image
_image
stringWithFormat:
nameForCondition:
nameForCondition:isDay:
assetExtension
weatherFrameworkBundle
URLForResource:withExtension:
bundleWithPath:
setWeatherFrameworkBundle:
setResourceCache:
resourceCache
setCountLimit:
scale
predicateWithFormat:
pathsForResourcesOfType:inDirectory:
filteredArrayUsingPredicate:
lastObject
lastPathComponent
stringByDeletingPathExtension
substringFromIndex:
setAssetExtension:
dictionaryWithContentsOfURL:
rootLayerForCondition:isDay:clearLayers:hiddenLayers:
rootLayerForCondition:isDay:
prepareLayer:clearLayers:hiddenLayers:
filenameForCondition:isDay:
rootLayerForFile:
parser
begin
parseContentsOfURL:
commit
result
name
containsObject:
clearColor
CGColor
setBackgroundColor:
sublayers
countByEnumeratingWithState:objects:count:
colorWithRed:green:blue:alpha:
arrayWithObjects:count:
colorWithDictionary:
getColors:locations:condition:isDay:
layer
setShouldRasterize:
setLocations:
setColors:
setObject:forKey:
objectForKey:
path
hasSuffix:
stringByReplacingOccurrencesOfString:withString:
pathForResource:ofType:
imageWithContentsOfCPBitmapFile:flags:
CGImage
sharedAssetLoader
rootLayerForOverlayCondition:isDay:
gradientLayerForCondition:isDay:
CAMLParser:didLoadResource:fromURL:
CAMLParser:resourceForURL:
_resourceCache
_assetExtension
_weatherFrameworkBundle
initWithCondition:isDay:
initWithCondition:isDay:clearLayers:hiddenLayers:variant:
setCondition:
setIsDay:
initializeRootViewWithBounds:
updateGradientWithCondition:isDay:
setConditionLayer:
conditionLayer
layoutConditionLayer:
addSublayer:
wallpaperViewWithBounds:variant:
setWallpaperView:
rootView
wallpaperView
insertSubview:atIndex:
doubleValue
beginAnimations:context:
setAnimationDuration:
setPosition:
setTransform:
commitAnimations
initWithVariant:
initWithFrame:wallpaperImage:
initWithFrame:wallpaperImage:variant:
gradientLayer
setGradientLayer:
setFrame:
willAnimateRotationToInterfaceOrientation:
setRootView:
setAnchorPoint:
setGeometryFlipped:
setMasksToBounds:
addSubview:
isOverlay
removeFromSuperlayer
frame
removeFromSuperview
condition
setAlpha:
animateWithDuration:animations:completion:
superlayer
hasSublayer:
timeOffset
setSpeed:
setTimeOffset:
setBeginTime:
convertTime:fromLayer:
_isOverlay
_isDay
_conditionLayer
_gradientLayer
_wallpaperView
_rootView
_condition
preferences
isEqualToDictionary:
numberWithFloat:
setValue:forKey:
centerNamed:
runServerOnCurrentThread
setWallpaper:withUserInfo:
registerForMessageName:target:selector:
preferencesPath
defaultManager
fileExistsAtPath:
dictionaryWithContentsOfFile:
dictionary
setPreferences:
updateSettingsForCondition:isDay:forVariant:
writePreferencesToFile:
mutableCopy
numberWithBool:
_updateSharedWallpaper
_updateSeparateWallpaper
removeObjectForKey:
setUpdateInterval:
_loaded
_preferences
WBWallpaper
SBFProceduralWallpaper
NSObject
CityUpdaterDelegate
WAImageWrapper
WAAsynchronousAssetLoader
WADynamicWeatherBackground
LKState
LKStateSetValue
LKStateTransition
LKStateTransitionElement
LKStateRemoveElement
LKStateRemoveAnimation
LKStateAddElement
LKStateAddAnimation
LKStateElement
WBWallpaperController
@8@0:4
c8@0:4
@16@0:4@8i12
@"UIView"8@0:4
v12@0:4c8
@"NSString"8@0:4
c12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
c12@0:4#8
c12@0:4@"Protocol"8
c12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
v12@0:4@8
v12@0:4@"City"8
v8@0:4
v12@0:4f8
^@8@0:4
v12@0:4^@8
i8@0:4
v12@0:4i8
@"WADynamicWeatherBackground"
@"NSTimer"
@"City"
@12@0:4^{CGImage=}8
^{CGImage=}8@0:4
v12@0:4^{CGImage=}8
^{CGImage=}
@12@0:4i8
@16@0:4i8c12
@24@0:4i8c12@16@20
@12@0:4@8
v20@0:4@8@12@16
^{CGColor=}12@0:4@8
v24@0:4^@8^@12i16i20
v20@0:4@8^{CGImage=}12@16
^{CGImage=}16@0:4@8@12
@"NSCache"
@"NSString"
@"NSBundle"
@28@0:4i8c12@16@20i24
@28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24
v16@0:4i8c12
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@"CALayer"
@"CAGradientLayer"
@"SBFStaticWallpaperView"
@"UIView"
c12@0:4c8
f8@0:4
v20@0:4i8c12i16
v16@0:4@8@12
@"NSMutableDictionary"
alloc
init
mainBundle
bundleIdentifier
isEqualToString:
drain
variantsShareWallpaper
sharedInstance
variantsShareWallpaper:
willAnimateRotationToInterfaceOrientation:duration:
numberWithInt:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
_updateWallpaperForLocations:withCompletion:
loaded
clearLockScreenWallpaper
clearHomeScreenWallpaper
clearSharedWallpaper
setLoaded:
_newWallpaperViewForProcedural:orImage:
wallpaperSettingsForVariant:
wallpaperWithSettings:variant:
_newWallpaperViewForProcedural:orImage:forVariant:
_isWallpaperView:displayingWallpaper:forVariant:
setHidden:
view
resume
pause
initWithSettings:variant:
autorelease
mainScreen
bounds
initWithFrame:
setVariant:
valueForKey:
boolValue
intValue
backgroundWithCondition:isDay:clearLayers:hiddenLayers:variant:
setView:
backgroundWithCondition:isDay:
setIsOverlay:
floatValue
setCity:
city
setDelegate:
setLocation:
respondsToSelector:
initWithLatitude:longitude:
setLocationID:
setWoeid:
scheduleUpdateTimer
updateInterval
scheduleUpdateTimerWithInterval:
intervalChanged:
addObserver:selector:name:object:
userInfo
update
updateTimer
invalidate
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setUpdateTimer:
conditionCode
isDay
setCondition:isDay:
variant
updateCondition:isDay:forVariant:
setLastUpdateStatus:
setUpdateTime:
removeObserver:
release
dealloc
identifier
colorChangesSignificantly
setAnimating:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
retainCount
zone
hash
superclass
description
debugDescription
cityDidStartWeatherUpdate:
cityDidFinishWeatherUpdate:
delegate
animating
_animating
_variant
_delegate
_view
_updateTimer
_city
initWithCGImage:
setImage:
wrapperWithCGImage:
image
_image
stringWithFormat:
nameForCondition:
nameForCondition:isDay:
assetExtension
weatherFrameworkBundle
URLForResource:withExtension:
bundleWithPath:
setWeatherFrameworkBundle:
setResourceCache:
resourceCache
setCountLimit:
scale
predicateWithFormat:
pathsForResourcesOfType:inDirectory:
filteredArrayUsingPredicate:
lastObject
lastPathComponent
stringByDeletingPathExtension
substringFromIndex:
setAssetExtension:
dictionaryWithContentsOfURL:
rootLayerForCondition:isDay:clearLayers:hiddenLayers:
rootLayerForCondition:isDay:
prepareLayer:clearLayers:hiddenLayers:
filenameForCondition:isDay:
rootLayerForFile:
parser
begin
parseContentsOfURL:
commit
result
name
containsObject:
clearColor
CGColor
setBackgroundColor:
sublayers
countByEnumeratingWithState:objects:count:
colorWithRed:green:blue:alpha:
arrayWithObjects:count:
colorWithDictionary:
getColors:locations:condition:isDay:
layer
setShouldRasterize:
setLocations:
setColors:
setObject:forKey:
objectForKey:
path
hasSuffix:
stringByReplacingOccurrencesOfString:withString:
pathForResource:ofType:
imageWithContentsOfCPBitmapFile:flags:
CGImage
sharedAssetLoader
rootLayerForOverlayCondition:isDay:
gradientLayerForCondition:isDay:
CAMLParser:didLoadResource:fromURL:
CAMLParser:resourceForURL:
_resourceCache
_assetExtension
_weatherFrameworkBundle
initWithCondition:isDay:
initWithCondition:isDay:clearLayers:hiddenLayers:variant:
setCondition:
setIsDay:
initializeRootViewWithBounds:
updateGradientWithCondition:isDay:
setConditionLayer:
conditionLayer
layoutConditionLayer:
addSublayer:
wallpaperViewWithBounds:variant:
setWallpaperView:
rootView
wallpaperView
insertSubview:atIndex:
doubleValue
beginAnimations:context:
setAnimationDuration:
setPosition:
setTransform:
commitAnimations
initWithVariant:
initWithFrame:wallpaperImage:
initWithFrame:wallpaperImage:variant:
gradientLayer
setGradientLayer:
setFrame:
willAnimateRotationToInterfaceOrientation:
setRootView:
setAnchorPoint:
setGeometryFlipped:
setMasksToBounds:
addSubview:
isOverlay
removeFromSuperlayer
frame
removeFromSuperview
condition
setAlpha:
animateWithDuration:animations:completion:
superlayer
hasSublayer:
timeOffset
setSpeed:
setTimeOffset:
setBeginTime:
convertTime:fromLayer:
_isOverlay
_isDay
_condition
_conditionLayer
_gradientLayer
_wallpaperView
_rootView
preferences
isEqualToDictionary:
numberWithFloat:
setValue:forKey:
centerNamed:
runServerOnCurrentThread
setWallpaper:withUserInfo:
registerForMessageName:target:selector:
preferencesPath
defaultManager
fileExistsAtPath:
dictionaryWithContentsOfFile:
dictionary
setPreferences:
updateSettingsForCondition:isDay:forVariant:
writePreferencesToFile:
mutableCopy
numberWithBool:
_updateSharedWallpaper
_updateSeparateWallpaper
removeObjectForKey:
setUpdateInterval:
_loaded
_preferences
com.apple.springboard
SBWallpaperController
orientation
duration
WBOrientationChanged
WeatherWallpaper
isDay
condition
type
clearLayers
hiddenLayers
isOverlay
locationID
woeid
WBIntervalChanged
updateInterval
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T^@,V_delegate
animating
TB,N,V_animating
variant
Ti,N,V_variant
view
T@"WADynamicWeatherBackground",&,N,V_view
updateTimer
T@"NSTimer",&,N,V_updateTimer
city
T@"City",&,N,V_city
image
T^{CGImage=},N,V_image
v8@?0
%.2d
_day
_night
%@%@
.caml
/System/Library/PrivateFrameworks/Weather.framework
@%dx-%d%@
SELF contains[c] %@
00_day
OverlayRules
.plist
green
blue
Gradients
keys
gradients
topColor
middleColor
bottomColor
location
.png
.cpbitmap
resourceCache
T@"NSCache",&,N,V_resourceCache
assetExtension
T@"NSString",C,N,V_assetExtension
weatherFrameworkBundle
T@"NSBundle",&,N,V_weatherFrameworkBundle
SBWallpaperImage
SBFStaticWallpaperView
v12@?0B8
TB,N,V_isOverlay
conditionLayer
T@"CALayer",&,N,V_conditionLayer
gradientLayer
T@"CAGradientLayer",&,N,V_gradientLayer
wallpaperView
T@"SBFStaticWallpaperView",&,N,V_wallpaperView
rootView
T@"UIView",&,N,V_rootView
Ti,N,V_condition
TB,N,V_isDay
/User/Library/Preferences/com.theronen.WeatherBoard.plist
CPDistributedMessagingCenter
com.theronen.WeatherBoard
com.theronen.WeatherBoard.setUpdateInterval
setWallpaper
wallpaperSettings
loaded
TB,N,V_loaded
Tf,N
preferences
T@"NSMutableDictionary",&,N,V_preferences
WBWallpaper
SBFProceduralWallpaper
NSObject
CityUpdaterDelegate
WAImageWrapper
WAAsynchronousAssetLoader
WADynamicWeatherBackground
LKState
LKStateSetValue
LKStateTransition
LKStateTransitionElement
LKStateRemoveElement
LKStateRemoveAnimation
LKStateAddElement
LKStateAddAnimation
LKStateElement
WBWallpaperController
@16@0:8
B16@0:8
@28@0:8@16i24
@"UIView"16@0:8
v20@0:8B16
@"NSString"16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
v24@0:8@16
v24@0:8@"City"16
v16@0:8
v20@0:8f16
^@16@0:8
v24@0:8^@16
i16@0:8
v20@0:8i16
@"WADynamicWeatherBackground"
@"NSTimer"
@"City"
@24@0:8^{CGImage=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
@20@0:8i16
@24@0:8i16B20
@40@0:8i16B20@24@32
@24@0:8@16
v40@0:8@16@24@32
^{CGColor=}24@0:8@16
v40@0:8^@16^@24i32i36
v40@0:8@16^{CGImage=}24@32
^{CGImage=}32@0:8@16@24
@"NSCache"
@"NSString"
@"NSBundle"
@44@0:8i16B20@24@32i40
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
v24@0:8i16B20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"CALayer"
@"CAGradientLayer"
@"SBFStaticWallpaperView"
@"UIView"
B20@0:8B16
f16@0:8
v28@0:8i16B20i24
v32@0:8@16@24
@"NSMutableDictionary"
